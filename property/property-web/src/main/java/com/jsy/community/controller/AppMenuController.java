package com.jsy.community.controller;import com.jsy.community.annotation.businessLog;import com.jsy.community.api.IAppMenuService;import com.jsy.community.constant.Const;import com.jsy.community.entity.AppMenuEntity;import com.jsy.community.utils.MinioUtils;import com.jsy.community.utils.UserUtils;import com.jsy.community.vo.CommonResult;import com.jsy.community.vo.menu.AppMenuVO;import com.zhsj.baseweb.annotation.Permit;import io.swagger.annotations.Api;import io.swagger.annotations.ApiOperation;import lombok.extern.slf4j.Slf4j;import org.apache.dubbo.config.annotation.DubboReference;import org.springframework.web.bind.annotation.*;import org.springframework.web.multipart.MultipartFile;import java.util.List;/** * <p> * APP物业菜单控制器 * </p> * * @author lihao * @since 2020-11-24 */@Api(tags = "APP物业菜单控制器")@Slf4j@RestController// @ApiJSYController@RequestMapping("/community/adminMenu")public class AppMenuController {		@DubboReference(version = Const.version, group = Const.group_property, check = false)	private IAppMenuService appMenuService;		/**	 * 查询所有菜单：来源是后台开发人员添加的菜单信息供物业端选择	 **/	@ApiOperation("查询所有菜单")	@GetMapping("/listMenu")	@Permit("community:property:community:adminMenu:listMenu")	public CommonResult listMenu() {		Long communityId = UserUtils.getAdminInfo().getCommunityId();		List<AppMenuEntity> list = appMenuService.listMenu(communityId);		return CommonResult.ok(list);	}	/**	 * 查询所有菜单：来源是后台开发人员添加的菜单信息供物业端选择	 **/	@ApiOperation("查询所有菜单")	@PostMapping("/file")	@Permit("community:property:community:adminMenu:file")	public CommonResult file(@RequestBody MultipartFile file) {		String upload = MinioUtils.upload(file, "app-menu-img");		return  CommonResult.ok(upload,"上传成功");	}		/**	 * 社区与菜单 是多对多关系  社区表：t_community  菜单表：t_app_menu  社区菜单中间表：t_menu_community	 **/	@ApiOperation("批量添加/编辑菜单")	@PostMapping("/appMenu")	@businessLog(operation = "编辑",content = "更新了【物业菜单】")	@Permit("community:property:community:adminMenu:appMenu")	public CommonResult appMenu(@RequestBody List<AppMenuVO> appMenuVOS) {		Long communityId = UserUtils.getAdminInfo().getCommunityId();		for (AppMenuVO appMenuVO : appMenuVOS) {			appMenuVO.setCommunityId(communityId);		}		appMenuService.appMenu(appMenuVOS);		return CommonResult.ok();	}}