<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="com.jsy.community.mapper.HouseMapper">

	<!-- 查询下级house -->
	<select id="getSubIdList" parameterType="java.util.List" resultType="Long">
		select id from t_house
		where deleted = 0 and pid in
		<foreach collection="list" item="item" separator="," open="(" close=")">
			#{item}
		</foreach>
	</select>

	<!-- 添加次级房屋单位 -->
<!--	<insert id="addSub">-->
<!--		insert into t_house(id,code,community_id,building,unit,floor,door,pid,type,comment)-->
<!--		select #{houseEntity.id},#{houseEntity.code},community_id,-->
<!--		if(building != '',building,#{houseEntity.building}),-->
<!--		if(unit != '',unit,#{houseEntity.unit}),-->
<!--		if(floor != '',floor,#{houseEntity.floor}),-->
<!--		if(door != '',door,#{houseEntity.door}),-->
<!--		id,#{houseEntity.type},#{houseEntity.comment}-->
<!--		from t_house-->
<!--		where id = #{houseEntity.pid}-->
<!--	</insert>-->
	<!-- 按社区id获取社区名称 和社区 房间数量 -->
	<select id="getCommunityNameAndUserAmountById"  resultType="java.util.HashMap">
		select c.name,(SELECT count(*) from t_house where community_id = c.id and type = 4 and deleted = 0) as communityUserNum from t_community as c where  c.deleted = 0 and c.id = #{communityId}
	</select>

	<!-- 按社区ID获取 社区名称 社区用户名和社区-->
	<select id="getCommunityNameAndUserInfo"  resultMap="useNameInfoMap">
		select DISTINCT u.real_name,u.uid,c.name from t_user as u left join t_user_house as h on u.uid = h.uid JOIN t_community as c on h.community_id = c.id where u.deleted = 0 and h.deleted = 0 and c.deleted = 0 and h.community_id = #{communityId}
	</select>
	<resultMap id="useNameInfoMap" type="com.jsy.community.entity.UserEntity">
		<result column="real_name" property="realName"/>
		<result column="uid" property="uid"/>
		<!--由于实体字段信息并不会返回到前端，所以我这里直接用UserEntity的nickname字段来封装 社区名称-->
		<result column="name" property="nickname"/>
	</resultMap>

	<!-- 通过社区ID查出所有 房屋编号、作为excel 下拉选择字符串 -->
	<select id="getCommunityHouseNumber" resultType="com.jsy.community.entity.HouseEntity">
		SELECT DISTINCT
			h.number,
			h.id
		FROM
			t_house AS h
		LEFT JOIN t_user_house AS uh ON h.id = uh.house_id and uh.deleted = 0
		WHERE
			uh.id IS NULL
		AND h.deleted = 0
		AND h.community_id = #{communityId}
	</select>

	<!-- ============================================ 物业端产品原型确定后新加的 开始  =========================================================== -->
	<!-- 批量更新单元到楼栋节点下 -->
	<update id="unitBindBuilding">
		update t_house
		set pid = #{entity.id}, building = #{entity.building}
		where id in
		<foreach collection="list" item="item" separator="," open="(" close=")">
			#{item}
		</foreach>
	</update>

	<!-- 更新单元数据 -->
	<update id="unitBindBuildingUpdate">
		update t_house
		set total_floor = #{entity.totalFloor}, building = #{entity.building}
		where id = #{entity.id}
	</update>

	<!-- 添加房屋 -->
	<insert id="addRoom">
		insert into t_house(id,code,community_id,number,total_floor,build_area,practical_area,house_type_code,house_type,property_type,building,unit,floor,door,pid,type,comment,create_by,create_time)
		select #{houseEntity.id},#{houseEntity.code},community_id,#{houseEntity.number},#{houseEntity.totalFloor},#{houseEntity.buildArea},#{houseEntity.practicalArea},#{houseEntity.houseTypeCode},#{houseEntity.houseType},#{houseEntity.propertyType},
		if(building != '',building,#{houseEntity.building}),
		if(unit != '',unit,#{houseEntity.unit}),
		#{houseEntity.floor},
		if(door != '',door,#{houseEntity.door}),
		id,#{houseEntity.type},#{houseEntity.comment},#{houseEntity.createBy},#{houseEntity.createTime}
		from t_house
		where id = #{houseEntity.pid}
	</insert>

	<!-- 批量新增房屋数据 -->
	<insert id="saveHouseBatch">
		insert into t_house (
			id,
			number,
			code,
			community_id,
			has_elevator,
			total_floor,
			type,
			building,
			unit,
			floor,
			door,
			pid,
			build_area,
			practical_area,
			house_type,
			property_type,
			decoration,
			house_type_code,
			comment,
			deleted,
			create_by,
			create_time,
			update_by,
			update_time
		)
		values
		<foreach collection="list" separator="," item="houseEntity">
			(#{houseEntity.id},
			#{houseEntity.number},
			#{houseEntity.code},
			#{houseEntity.communityId},
			#{houseEntity.hasElevator},
			#{houseEntity.totalFloor},
			#{houseEntity.type},
			#{houseEntity.building},
			#{houseEntity.unit},
			#{houseEntity.floor},
			#{houseEntity.door},
			#{houseEntity.pid},
			#{houseEntity.buildArea},
			#{houseEntity.practicalArea},
			#{houseEntity.houseType},
			#{houseEntity.propertyType},
			#{houseEntity.decoration},
			#{houseEntity.houseTypeCode},
			#{houseEntity.comment},
			#{houseEntity.deleted},
			#{houseEntity.createBy},
			#{houseEntity.createTime},
			#{houseEntity.updateBy},
			#{houseEntity.updateTime})
		</foreach>
	</insert>

	<!-- 批量新增楼栋数据 -->
	<insert id="saveBuildingBatch">
		insert into t_house (
		id,
		community_id,
		total_floor,
		type,
		building,
		pid,
		building_type,
		deleted,
		create_by,
		create_time,
		update_time
		)
		values
		<foreach collection="list" separator="," item="houseEntity">
			(#{houseEntity.id},
			#{houseEntity.communityId},
			#{houseEntity.totalFloor},
			#{houseEntity.type},
			#{houseEntity.building},
			#{houseEntity.pid},
			#{houseEntity.buildingType},
			#{houseEntity.deleted},
			#{houseEntity.createBy},
			#{houseEntity.createTime},
			#{houseEntity.updateTime})
		</foreach>
	</insert>

	<!-- 批量更新次级节点冗余的父级名称 -->
	<update id="updateSub">
		update t_house
		<set>
			<if test="entity.building != null and entity.building != ''">,building = #{entity.building}</if>
			<if test="entity.unit != null and entity.unit != ''">,unit = #{entity.unit}</if>
			<if test="entity.totalFloor != null and entity.totalFloor != ''">,total_floor = #{entity.totalFloor}</if>
			where id in
			<foreach collection="list" item="item" separator="," open="(" close=")">
				#{item}
			</foreach>
		</set>
	</update>

	<!-- 通过社区id 获得 社区内未被登记的房屋 -->
	<select id="getCommunityHouseById" resultType="com.jsy.community.vo.property.ProprietorVO">
		SELECT
			h.id as houseId,
			h.community_id,
			h.number AS houseNumber
		FROM
			t_house AS h
		WHERE
			( SELECT count( 1 ) AS num FROM t_proprietor AS p WHERE p.deleted = 0 AND h.id = p.house_id ) = 0
			AND h.deleted = 0
			AND h.community_id = #{communityId}
	</select>

	<!-- 更新修改 -->
	<update id="updateHouse">
		update t_house h
		<set>
			<if test="entity.number != null and entity.number != ''">,h.number = #{entity.number}</if>
			<if test="entity.buildArea != null and entity.buildArea != 0">,h.build_area = #{entity.buildArea}</if>
			<if test="entity.totalFloor != null and entity.totalFloor != 0">,h.total_floor = #{entity.totalFloor}</if>
			<if test="entity.hasElevator == 0 or entity.hasElevator == 1">,h.has_elevator = #{entity.hasElevator}</if>
			<if test="entity.building != null and entity.building != ''">,h.building = #{entity.building}</if>
			<if test="entity.unit != null and entity.unit != ''">,h.unit = #{entity.unit}</if>
			<if test="entity.door != null and entity.door != ''">,h.door = #{entity.door}</if>
			<if test="entity.pid != null and entity.pid != 0">,h.pid = #{entity.pid}</if>
			<if test="entity.buildingType != null and entity.buildingType != 0">,h.building_type = #{entity.buildingType}</if>
			<if test="entity.houseTypeCode != null and entity.houseTypeCode != ''">,h.house_type_code = #{entity.houseTypeCode}</if>
			<if test="entity.houseType != null and entity.houseType != 0">,h.house_type = #{entity.houseType}</if>
			<if test="entity.propertyType != null and entity.propertyType != 0">,h.property_type = #{entity.propertyType}</if>
			<if test="entity.decoration != null and entity.decoration != 0">,h.decoration = #{entity.decoration}</if>
			<if test="entity.floor != null and entity.floor != ''">,h.floor = #{entity.floor}</if>
			<if test="entity.practicalArea != null and entity.practicalArea != ''">,h.practical_area = #{entity.practicalArea}</if>
			<if test="entity.comment != null and entity.comment != ''">,h.comment = #{entity.comment}</if>
			,update_time = now()
		</set>
		where id = #{entity.id}
	</update>

	<!-- 批量查询楼栋已绑定单元数 -->
	<select id="queryBindUnitCountBatch" resultType="Map">
		select pid,count(0) as count from t_house where type = 2 and pid in
		<foreach collection="list" item="item" open="(" separator="," close=")">
			#{item}
		</foreach>
		group by pid
	</select>
	<!-- ============================================ 物业端产品原型确定后新加的 结束  =========================================================== -->

	<!-- 查房屋id与房屋映射关系 -->
	<select id="queryIdAndHouseMap" resultType="java.util.Map">
		select id as houseId,concat(building,unit,floor,door) as address,building,unit from t_house
		where id in
		<foreach collection="houseIds" item="item" open="(" separator="," close=")">
			#{item}
		</foreach>
	</select>

	<!-- 2021.7.9 去除查询条件 and tuh.check_status=1 -->
	<select id="selectHouseAll" resultType="com.jsy.community.entity.HouseEntity">
        select th.*,tuh.uid as uid from  t_user_house tuh
        join t_house th
        on tuh.house_id=th.id
        where th.deleted=0 and tuh.deleted=0 and th.community_id=#{communityId}
    </select>

	<!-- 通过社区ID查询出所有楼栋和单元 -->
	<select id="getBuildingAndUnitList" resultType="com.jsy.community.entity.HouseEntity">
		select
			*
		from t_house
		<where>
			type in (1,2)
			and community_id = #{communityId}
			and deleted = 0
		</where>
	</select>

	<!-- 通过社区ID查询出所有楼栋 -->
	<select id="getBuildingList" resultType="com.jsy.community.entity.HouseEntity">
		select
		*
		from t_house
		<where>
			type = 1
			and community_id = #{communityId}
			and deleted = 0
		</where>
	</select>

	<!-- 查询小区下所有的房间 -->
	<select id="getAllHouse" resultType="com.jsy.community.entity.HouseEntity">
		select
		*
		from t_house
		<where>
			type = 4
			and community_id = #{communityId}
			and deleted = 0
		</where>
	</select>
	<select id="selectInIds" resultType="com.jsy.community.entity.HouseEntity">
        select * from  t_house where id in
        <foreach collection="split" item="item" open="(" close=")" separator=",">
			#{item}
		</foreach>
    </select>
	<select id="selectUserHouseAuth" resultType="com.jsy.community.entity.HouseEntity">
        SELECT tu.*,tuh.uid FROM t_house tu JOIN t_user_house tuh on tu.id=tuh.house_id where tuh.house_id in
		<foreach collection="split" item="item" open="(" close=")" separator=",">
			#{item}
		</foreach>
    </select>

	<!-- 查询住户数量 -->
	<select id="selectHouseNumberCount" resultType="Map">
		select house_id as houseId,count(0) as count from t_house_member
		where house_id in
		<foreach collection="list" item="item" open="(" separator="," close=")">
			#{item}
		</foreach>
		group by house_id
	</select>

	<select id="selectAllBuildingUnitDoor" resultType="com.jsy.community.entity.HouseEntity">
		select * from t_house where community_id = #{communityId} and deleted = 0
	</select>

	<select id="selectAllHouseByCommunityIds" resultType="java.lang.Integer">
		select count(0) from t_house where community_id in
		<foreach collection="list" item="item" open="(" separator="," close=")">
			#{item}
		</foreach>
	</select>
	<select id="getHouseAll" resultType="com.jsy.community.entity.HouseEntity">
        SELECT
			th.*,tuh.uid
		FROM
			t_house th
		LEFT JOIN t_user_house tuh ON th.id = tuh.house_id
		WHERE
			th.type = 4
		AND th.deleted = 0
		AND th.community_id =#{communityId}
    </select>
</mapper>
