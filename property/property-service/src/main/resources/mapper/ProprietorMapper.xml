<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jsy.community.mapper.ProprietorMapper">

    <!-- 物业添加新增业主 -->
    <insert id="saveUser">
        insert into t_user ( id,real_name,uid,wechat,qq,email,mobile,id_card,identification_type )
        values
        ( #{id},#{realName},#{uid},#{wechat},#{qq},#{email},#{mobile},#{idCard},#{identificationType})
    </insert>
    <!-- 物业查询业主用户信息 -->
    <select id="query" resultType="com.jsy.community.vo.ProprietorVO" >
        SELECT
	        p.id,
	        p.real_name,
	        p.house_id,
	        CONCAT(
		    h.number,
		    ' ',
		    h.building,
		    h.unit,
		    ' ',
	    CASE
			h.house_type
			WHEN 1 THEN
			'商铺' ELSE '住宅'
		END
		    ) AS houseMergeName,
	        p.mobile,
	        p.id_card,
	        p.create_time,
	        p.update_time,
	        p.create_by,
	        p.update_by,
	        p.wechat,
	        p.qq,
	        p.email
	    FROM
		    t_proprietor AS p
		    LEFT JOIN t_house AS h ON p.house_id = h.id
		    <where>
                AND p.deleted = 0
                AND h.deleted = 0
                /* 如果房屋id不为空 就直接按房屋id查询业主 */
                <if test="query.houseId != null and query.houseId &gt; 0 ">
                    AND p.house_id = #{query.houseId}
                </if>
                /* [单楼栋]如果房屋id为空 并且 楼栋id 不为空 并且 单元id为空 那就按 房屋 父级id 为楼栋id的查  */
                <if test="query.houseId == null and query.buildingId != null and query.unitId == null">
                    AND h.pid = #{query.buildingId} and type = 4
                </if>
                /* [楼栋单元]如果房屋id为空 并且 楼栋id 不为空 并且 单元id也不为空 那就按 房屋 父级id 为单元id的查  */
                <if test="query.houseId == null and query.buildingId != null and query.unitId != null">
                    AND h.pid = #{query.unitId} and type = 4
                </if>
                /* [单单元]如果房屋id为空 并且 楼栋id 为空 并且 单元id不为空 那就按 房屋 父级id 为单元id的查  */
                <if test="query.houseId == null and query.buildingId == null and query.unitId != null">
                    AND h.pid = #{query.unitId} and type = 4
                </if>
                /* 搜索文本不为空 则按 真实姓名/证件号码/手机号码 来匹配 */
                <if test="query.searchText != null and !query.searchText.equals(&quot;&quot;)">
                    AND p.real_name like concat('%',#{query.searchText},'%') or p.id_card like concat('%', #{query.searchText}, '%') or p.mobile like concat('%', #{query.searchText}, '%')
                </if>
            </where>
            LIMIT #{page},#{size}
    </select>


    <!-- 通过社区id拿到当前社区的 层级结构 房屋层级模式：1.楼栋单元 2.单元楼栋 3.单楼栋 4.单单元 -->
    <select id="getHouseListByCommunityId" resultType="com.jsy.community.entity.HouseEntity">
        SELECT DISTINCT
        <choose>
            <when test="houseLevelMode == 1 || houseLevelMode == 2">
                    h.building,
                    h.unit,
                    h.floor,
                    h.door,
                    h.id as houseId
            </when>
            <when test="houseLevelMode == 3">
                h.building,
                h.floor,
                h.door,
                h.id as houseId
            </when>
            <when test="houseLevelMode == 4">
                h.unit,
                h.floor,
                h.door,
                h.id as houseId
            </when>
            <otherwise>
            </otherwise>
        </choose>
        FROM
	        t_house AS h
	    LEFT JOIN t_user_house AS uh ON h.id = uh.house_id
        WHERE
	        uh.id IS NULL
	        AND h.deleted = 0
	        AND h.community_id = #{communityId}
	        AND h.type = 4
    </select>
    <!-- 批量注册用户 注意：以下的字段都存在唯一索引的情况下 才使用ignore关键字 如果存在此用户 则不管 -->
    <insert id="registerBatch">
        insert IGNORE into t_user_auth(id,uid,mobile,create_time)
        values
        <foreach collection="userEntityList" item="item" separator=",">
            (#{item.id},#{item.uid},#{item.mobile},now())
        </foreach>
    </insert>
    <!-- 批量登记用户  -->
    <insert id="insertUserBatch">
        insert IGNORE into t_user(id,uid,householder_id,mobile,sex,real_name,id_card,detail_address,create_time)
        values
        <foreach collection="userEntityList" item="item" separator=",">
            (#{item.id},
            IF(exists(select uid from t_user_auth where mobile = #{item.mobile}), (select uid from t_user_auth where mobile = #{item.mobile}),#{item.uid})
            ,#{item.householderId},#{item.mobile},#{item.sex},#{item.realName},#{item.idCard},#{item.detailAddress},now())
        </foreach>
    </insert>
    <!-- 批量登记房屋 -->
    <insert id="registerHouseBatch">
        insert into t_user_house (id,uid,community_id,house_id,check_status,create_time)
        values
        <foreach collection="userEntityList" item="item" separator=",">
            (#{item.houseEntity.id},
            IF(exists(select uid from t_user where mobile = #{item.mobile}), (select uid from t_user_auth where mobile = #{item.mobile}),#{item.uid})
            ,#{communityId},#{item.houseEntity.houseId},1,now())
        </foreach>
    </insert>

    <!-- 通过社区id获得当前社区所有未登记的房屋信息 houseLevelMode = 社区所属层级机构 房屋层级模式：1.楼栋单元 2.单元楼栋 3.单楼栋 4.单单元 -->
    <select id="queryHouseByCommunityId" resultType="com.jsy.community.vo.HouseVo">
        SELECT
	        h.id AS houseId,
	        CONCAT(
	        <choose>
                <when test="houseLevelMode == 1 or houseLevelMode == 2">
                    h.building, h.unit, h.floor, h.door
                </when>
                <when test="houseLevelMode == 3">
                    h.building, h.floor, h.door
                </when>
                <when test="houseLevelMode == 4">
                    h.unit, h.floor, h.door
                </when>
                <otherwise>
                </otherwise>
            </choose>
	        ) AS mergeName
        FROM
	        t_house AS h
	        LEFT JOIN t_user_house AS uh ON h.id = uh.house_id
        WHERE
	        uh.id IS NOT NULL
	        AND uh.check_status = 1
	        AND h.community_id = #{communityId}
	        AND h.type = 4
	        AND uh.deleted = 0
	        AND h.deleted = 0
    </select>
    <!-- 批量导入业主家属信息 -->
    <insert id="saveUserMemberBatch">
        INSERT IGNORE INTO t_house_member
        ( id, householder_id, community_id, house_id, NAME, sex, mobile, identification_type, id_card, relation, create_time )
        VALUES
        <foreach collection="userEntityList" item="item" separator=",">
            ( #{item.id}, #{item.uid}, #{communityId}, #{item.houseEntity.houseId}, #{item.realName}, #{item.sex}, #{item.mobile}, 1, #{item.idCard}, #{item.relationCode}, now() )
        </foreach>
    </insert>
    <!-- 插入 物业 人员对 用户数据的 操作日志 -->
    <insert id="insertOperationLog">
        insert into t_admin_proprietor_log ( id,operation_by,operation_time,pid,operation_type )
        values
        ( #{id},#{operationPerson},#{operationTime},#{pid},#{operationType})
    </insert>
    <!-- 查出管理员姓名 -->
    <select id="queryAdminNameByUid" resultType="java.lang.String">
        select real_name from t_admin_user where uid = #{adminUid} and deleted = 0
    </select>
    <!-- 通过houseId 查询 t_house表是否存在 -->
    <select id="existHouse" resultType="java.lang.Integer">
        select count(*) from t_house where id = #{houseId} and community_id = #{communityId} and deleted = 0
    </select>
</mapper>
