<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jsy.community.mapper.AdminUserMapper">
	<!-- 批量添加用户角色 -->
	<insert id="addUserRoleBatch" parameterType="java.util.List">
		insert into t_admin_user_role(user_id,role_id)
		values
		<foreach collection="list" item="item" separator=",">
			(#{userId},#{item})
		</foreach>
	</insert>

	<!-- 查询用户的所有权限 -->
	<select id="queryAllPerms" resultType="string">
		select m.perms
		from t_admin_user_role ur
		LEFT JOIN t_admin_role_menu rm on ur.role_id = rm.role_id
		LEFT JOIN t_admin_menu m on rm.menu_id = m.id
		where ur.user_id = #{userId}
	</select>

	<!-- 查询用户的所有菜单ID -->
	<select id="queryAllMenuId" resultType="long">
		select distinct rm.menu_id
		from t_admin_user_role ur
		LEFT JOIN t_admin_role_menu rm on ur.role_id = rm.role_id
		where ur.user_id = #{userId}
	</select>

<!--	<select id="queryByUserName" resultType="com.jsy.community.entity.admin.AdminUserEntity">-->
<!--		select *-->
<!--		from t_admin_user-->
<!--		where username = #{username}-->
<!--	</select>-->

<!--	<select id="queryByEmail" resultType="com.jsy.community.entity.admin.AdminUserEntity">-->
<!--		select *-->
<!--		from t_admin_user-->
<!--		where email = #{email}-->
<!--	</select>-->

<!--	<select id="queryByMobile" resultType="com.jsy.community.entity.admin.AdminUserEntity">-->
<!--		select *-->
<!--		from t_admin_user-->
<!--		where mobile = #{mobile}-->
<!--	</select>-->

	<!-- uid批量查姓名 -->
	<select id="queryNameByUidBatch" resultType="Map">
		select uid,real_name as name from t_admin_user
		where uid in
		<foreach collection="uidList" item="item" open="(" close=")" separator=",">
			#{item}
		</foreach>
	</select>

	<!-- 编辑操作员 -->
	<update id="updateOperator">
		update t_admin_user u
		<set>
			<if test="entity.realName != null and entity.realName != ''">,u.real_name = #{entity.realName}</if>
			<if test="entity.mobile != null and entity.mobile != ''">,u.mobile = #{entity.mobile}</if>
			,update_time = now()
		</set>
		where id = #{entity.id}
	</update>

	<select id="getRepairPerson" resultType="hashmap">
		select u.id,u.uid, u.real_name, u.number,o.name from t_admin_user u,t_organization o
		<where>
			<if test="condition!=null and condition!=''">
                (u.real_name like concat ("%",#{condition},"%") or u.number like concat ("%",#{condition},"%") or o.name like concat("%",#{condition},"%"))
			</if>
            and u.org_id = o.id
            and o.is_repair = 1
		</where>
	</select>

	<select id="queryUidListByRealName" resultType="String">
		SELECT uid FROM t_admin_user WHERE real_name LIKE CONCAT(CONCAT('%', #{userName}), '%') AND deleted = 0
	</select>
	<!-- 操作员条件查询 -->
    <select id="queryPageUserEntity" resultType="com.jsy.community.entity.admin.AdminUserEntity">
		select
			au.id,
			au.uid,
			au.real_name,
			au.mobile,
			au.create_time,
			aur.role_id,
			aur.role_id as roleIdStr,
			ar.name as roleName
		from t_admin_user au
		left join t_admin_user_role aur on aur.uid = au.uid
		left join t_admin_role ar on ar.id = aur.role_id
		<where>
			au.deleted = 0
			and au.uid != #{qo.uid}
			and ar.company_id = #{qo.companyId}
			<if test="qo.name != null and qo.name !=''">
				and (au.real_name like concat("%", #{qo.name}, "%")
				or au.mobile like concat("%", #{qo.name}, "%"))
			</if>
			<if test="qo.roleId != null">
				and aur.role_id = #{qo.roleId}
			</if>
		</where>
		order by au.create_time
		limit #{startSize}, #{size}
	</select>
	<select id="countPageUserEntity" resultType="java.lang.Integer">
		select count(*) from (
		select
			au.id,
			au.uid,
			au.real_name,
			au.mobile,
			au.create_time,
			aur.role_id,
			ar.name as roleName
		from t_admin_user au
		left join t_admin_user_role aur on aur.uid = au.uid
		left join t_admin_role ar on ar.id = aur.role_id
		<where>
			au.deleted = 0
			and ar.company_id = #{qo.companyId}
			<if test="qo.name != null and qo.name !=''">
				and (au.real_name like concat("%", #{qo.name}, "%")
				or au.mobile like concat("%", #{qo.name}, "%"))
			</if>
			<if test="qo.roleId != null">
				and aur.role_id = #{qo.roleId}
			</if>
		</where>) as a
	</select>
</mapper>