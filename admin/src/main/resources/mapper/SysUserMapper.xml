<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jsy.community.mapper.SysUserMapper">
	<!-- 批量添加用户角色 -->
	<insert id="addUserRoleBatch" parameterType="java.util.List">
		insert into t_sys_user_role(user_id,role_id)
		values
		<foreach collection="list" item="item" separator=",">
			(#{userId},#{item})
		</foreach>
	</insert>

	<!-- 查询用户的所有权限 -->
	<select id="queryAllPerms" resultType="string">
		select m.perms
		from t_sys_user_role ur
		LEFT JOIN t_sys_role_menu rm on ur.role_id = rm.role_id
		LEFT JOIN t_sys_menu m on rm.menu_id = m.id
		where ur.user_id = #{userId}
	</select>
	
	<!-- 查询用户的所有菜单ID -->
	<select id="queryAllMenuId" resultType="long">
		select distinct rm.menu_id
		from t_sys_user_role ur
		LEFT JOIN t_sys_role_menu rm on ur.role_id = rm.role_id
		where ur.user_id = #{userId}
	</select>
	
	<select id="queryByUserName" resultType="com.jsy.community.entity.sys.SysUserEntity">
		select *
		from t_sys_user
		where username = #{username}
	</select>

	<select id="queryByEmail" resultType="com.jsy.community.entity.sys.SysUserEntity">
		select *
		from t_sys_user
		where email = #{email}
	</select>

	<!-- 操作员条件查询 -->
	<select id="queryPageUserEntity" resultType="com.jsy.community.entity.sys.SysUserEntity">
		select
		au.id,
		au.real_name,
		au.mobile,
		au.create_time,
		aur.role_id,
		ar.name as roleName
		from t_sys_user au
		left join t_sys_user_role aur on aur.user_id = au.id
		left join t_sys_role ar on ar.id = aur.role_id
		<where>
			au.deleted = 0
			<if test="qo.name != null and qo.name !=''">
				and (au.real_name like concat("%", #{qo.name}, "%")
				or au.mobile like concat("%", #{qo.name}, "%"))
			</if>
			<if test="qo.roleId != null">
				and aur.role_id = #{qo.roleId}
			</if>
		</where>
		order by au.create_time
		limit #{startSize}, #{size}
	</select>

	<select id="countPageUserEntity" resultType="java.lang.Integer">
		select count(*) from (
		select
		au.id,
		au.real_name,
		au.mobile,
		au.create_time,
		aur.role_id,
		ar.name as roleName
		from t_sys_user au
		left join t_sys_user_role aur on aur.user_id = au.id
		left join t_sys_role ar on ar.id = aur.role_id
		<where>
			au.deleted = 0
			<if test="qo.name != null and qo.name !=''">
				and (au.real_name like concat("%", #{qo.name}, "%")
				or au.mobile like concat("%", #{qo.name}, "%"))
			</if>
			<if test="qo.roleId != null">
				and aur.role_id = #{qo.roleId}
			</if>
		</where>) as a
	</select>

	<!-- 编辑操作员 -->
	<update id="updateOperator">
		update t_sys_user u
		<set>
			<if test="entity.realName != null and entity.realName != ''">,u.real_name = #{entity.realName}</if>
			<if test="entity.mobile != null and entity.mobile != ''">,u.mobile = #{entity.mobile}</if>
			,update_time = now()
		</set>
		where id = #{entity.id}
	</update>
</mapper>