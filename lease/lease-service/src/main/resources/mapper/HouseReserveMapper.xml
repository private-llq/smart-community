<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jsy.community.mapper.HouseReserveMapper">

    <!-- 提交预约 -->
    <insert id="insertReserve">
        insert into t_house_reserve
        (
        id,
        house_lease_id,
        community_id,
        reserve_status,
        reserve_uid,
        reserve_msg,
        checking_time,
        check_in_time,
        lease_delete_status,
        delete_landlord_status,
        deleted,
        create_time
        )
        select
        #{id},
        #{houseLeaseId},
        #{communityId},
        #{reserveStatus},
        #{reserveUid},
        #{reserveMsg},
        #{checkingTime},
        #{checkInTime},
        0,
        0,
        0,
        now()
        from dual
        where not exists
        (
        select
        id,
        house_lease_id,
        community_id,
        reserve_status,
        reserve_uid,
        reserve_msg,
        checking_time,
        check_in_time,
        lease_delete_status,
        delete_landlord_status,
        deleted,
        create_time
        from t_house_reserve
        where
        reserve_uid = #{reserveUid}
        and house_lease_id = #{houseLeaseId}
        and reserve_status in (1, 2)
        and TO_DAYS(checking_time) = TO_DAYS(#{checkingTime})
        );
    </insert>

    <!-- 修改预约状态 -->
    <update id="updateReserveState">
        update t_house_reserve
        <set>
            <trim prefixOverrides=",">
                <if test="reserveMsg != null and !reserveMsg.equals(&quot;&quot;)">
                    ,reserve_msg = #{reserveMsg}
                </if>
                ,reserve_status = #{reserveStatus}
                ,update_time = now()
            </trim>
        </set>
        <where>
            id = #{id} and reserve_uid = #{reserveUid} and deleted = 0
        </where>
    </update>

    <!-- 取消我预约的 -->
    <update id="cancelMyReserveState">
        update t_house_reserve
        set
        reserve_status = 3,
        update_time = now()
        where
        reserve_uid = #{reserveUid}
        and id = #{id}
        and lease_delete_status = 0
        and (reserve_status = 1 or reserve_status = 2)
    </update>

    <!-- 取消预约我的 -->
    <update id="cancelReserveMeState">
        update t_house_reserve thr
        LEFT JOIN t_house_lease thl on thl.id = thr.house_lease_id
        set
        thr.reserve_status = 3,
        thr.update_time = now()
        where
        thl.uid = #{reserveUid}
        and thr.id = #{id}
        and thr.delete_landlord_status = 0
        and (thr.reserve_status = 1 or thr.reserve_status = 2)
    </update>

    <!-- 删除我预约的看房信息,只能删除已取消或已完成的 -->
    <update id="deleteMyReserve">
        update t_house_reserve
        set
        lease_delete_status = 1,
        update_time = now()
        <where>
            reserve_uid = #{reserveUid}
            and id = #{id}
            and (reserve_status = 4 or reserve_status = 3)
        </where>
    </update>

    <!-- 删除预约我的看房信息,只能删除不是待看房的 -->
    <update id="deleteReserveMe">
        update t_house_reserve thr
        LEFT JOIN t_house_lease thl on thl.id = thr.house_lease_id
        set
        thr.delete_landlord_status = 1,
        thr.update_time = now()
        <where>
            thr.reserve_status != 2
            and thr.id = #{id}
            and thl.uid = #{reserveUid}
        </where>
    </update>


    <!-- 我预约的信息 我预约别人 -->
    <select id="meReserveHouse" resultType="com.jsy.community.vo.lease.HouseReserveVO">
        SELECT DISTINCT
        checking_time AS checkingTime,
        reserve_status as reserveStatus,
        CASE
        r.reserve_status
        WHEN 1 THEN
        '待处理'
        WHEN 2 THEN
        '待看房'
        WHEN 3 THEN
        '已取消' ELSE '已完成'
        END AS reserveStatusText,
        l.id as houseLeaseId,
        l.house_title AS houseTitle,
        l.house_leasedeposit_id AS houseLeaseDeposit,
        l.house_type_code as houseType,
        l.house_leasemode_id AS houseLeaseMode,
        l.house_square_meter AS houseSquareMeter,
        l.house_direction_id,
        l.house_price AS housePrice,
        l.house_unit,
        l.house_image_id,
        l.house_community_id as houseCommunityId,
        r.id,
        u.real_name as contactName,
        u.avatar_url as contactAvatar,
        c.name as houseCommunityName,
        r.create_time,
        'false' as proprietor
        FROM
        t_house_reserve AS r
        LEFT JOIN t_house_lease AS l ON r.house_lease_id = l.id
        LEFT JOIN t_user AS u ON r.reserve_uid = u.uid
        LEFT JOIN t_community c on c.id = l.house_community_id
        WHERE
        r.reserve_uid = #{uid}
        <if test="qo.query.reserveStatus > 0">
            and r.reserve_status = #{qo.query.reserveStatus}
        </if>
        and r.lease_delete_status = 0
        and l.deleted = 0
        and u.deleted = 0
        order by r.create_time DESC
        LIMIT #{qo.page},#{qo.size}
    </select>
    <!-- 预约我的信息 别人预约我 -->
    <select id="reserveMeHouse" resultType="com.jsy.community.vo.lease.HouseReserveVO">
        SELECT
        checking_time AS checkingTime,
        reserve_status as reserveStatus,
        CASE
        r.reserve_status
        WHEN 1 THEN
        '待处理'
        WHEN 2 THEN
        '待看房'
        WHEN 3 THEN
        '已取消' ELSE '已完成'
        END AS reserveStatusText,
        l.id as houseLeaseId,
        l.house_title AS houseTitle,
        l.house_leasedeposit_id AS houseLeaseDeposit,
        l.house_type_code as houseType,
        l.house_square_meter AS houseSquareMeter,
        l.house_direction_id,
        l.house_leasemode_id AS houseLeaseMode,
        l.house_price AS housePrice,
        l.house_unit,
        l.house_image_id,
        l.house_community_id as houseCommunityId,
        r.id,
        u.real_name as contactName,
        u.avatar_url as contactAvatar,
        c.name as houseCommunityName,
        'true' as proprietor
        FROM
        t_house_lease AS l
        LEFT JOIN t_house_reserve AS r ON l.id = r.house_lease_id
        LEFT JOIN t_user AS u ON r.reserve_uid = u.uid
        LEFT JOIN t_community c on c.id = l.house_community_id
        WHERE
        r.id is not null
        <if test="qo.query.reserveStatus > 0">
            and r.reserve_status = #{qo.query.reserveStatus}
        </if>
        and l.uid = #{uid}
        and r.reserve_uid != #{uid}
        and r.delete_landlord_status = 0
        and u.deleted = 0
        and l.deleted = 0
        order by r.create_time DESC
        LIMIT #{qo.page},#{qo.size}
    </select>
    <!-- 表拿到用户的推送信息 -->
    <select id="getPushInfo" resultType="com.jsy.community.vo.lease.HouseReserveVO">
        select
        l.house_title,
        u.reg_id as pushId
        from t_house_reserve as r
        LEFT JOIN t_user as u on r.reserve_uid = u.uid
        join t_house_lease as l on r.house_lease_id = l.id
        where
        l.deleted = 0
        and u.deleted = 0
        and r.id = #{id}
    </select>
    <!-- 通过预约信息id 查出这个房主的uid -->
    <select id="getUidByHouseReserveId" resultType="java.lang.String">
        select
        l.uid
        from t_house_reserve as r
        left join t_house_lease as l on r.house_lease_id = l.id
        where
        r.deleted = 0 and
        l.deleted = 0 and
        r.deleted = 0 and
        r.id = #{id}
    </select>
    <!-- 预约确认 -->
    <update id="confirm">
        update t_house_reserve
        <set>
            reserve_status = 2
        </set>
        <where>
            id = #{id} and reserve_status = 1 and delete_landlord_status = 0
        </where>
    </update>
    <!-- 租房用户确认完成看房 -->
    <update id="completeChecking">
        update t_house_reserve
        set
        reserve_status = 4,
        update_time = now()
        <where>
            id = #{id}
            and reserve_status = 2
            and reserve_uid = #{reserveUid}
        </where>
    </update>
    <!-- 定时完成看房 -->
    <update id="timingCompleteChecking">
        update t_house_reserve
        set
        reserve_status = 4,
        update_time = now()
        <where>
            reserve_status = 2
            and DATE(checking_time) = DATE_SUB(CURDATE(), INTERVAL 1 DAY)
        </where>
    </update>
</mapper>