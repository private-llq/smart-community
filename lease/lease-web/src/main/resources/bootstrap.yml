#配置中心的地址
spring:
  profiles:
    active: dev
  thymeleaf:
    prefix: classpath:/templates/
  main:
    allow-bean-definition-overriding: true
  application:
    name: lease-web
  cloud:
    config:
      #uri: http://127.0.0.1:2020 #zuul要从配置中心拉取文件
      discovery:
        enabled: true #开启springcloudconfig服务端的服务发现
        service-id: base-config-server #config-server服务的名称
      #你要拉取具体的哪个配置文件
      name: lease-web,common,common-service,common-web  #配置文件名字   dev是环境
      profile: ${spring.profiles.active} #环境  组成完整的文件名：gateway-service-dev.yml
      label: master #主分支

dubbo:
  registry:
    address: spring-cloud://127.0.0.1
    use-as-metadata-center: false
  protocol:
    name: dubbo
    port: -1
    threadname: lease-web
    dispatcher: message
    threads: 50
  application:
    name: ${spring.application.name}
  cloud:
    subscribed-services: lease-service
  consumer:
    check: false
    retries: 0
    timeout: 99999
  provider:
    retries: 0
    timeout: 99999


jsy:
  redis:
    annotation:
      # 当前模块@Cacheable 缓存的数据的超时时间/s
      cacheTimeout: 1800


---
spring:
  profiles: dev

eureka:
  client:
    service-url:
      defaultZone: http://192.168.12.49:36366/eureka
  instance:
    hostname: ${spring.cloud.client.ip-address}
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${spring.application.instance_id:${server.port}}

---
spring:
  profiles: test
eureka:
  client:
    service-url:
      defaultZone: http://222.178.212.29:36366/eureka
  instance:
    hostname: ${spring.cloud.client.ip-address}
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${spring.application.instance_id:${server.port}}

---
spring:
  profiles: prod
eureka:
  client:
    service-url:
      defaultZone: ${server.eureka-service-address}
  instance:
    hostname: ${spring.cloud.client.ip-address}
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${spring.application.instance_id:${server.port}}