#spring:
#  main:
#    allow-bean-definition-overriding: true
#  application:
#    name: payment-service
#  profiles:
#    active: dev
#  cloud:
#    nacos:
#      discovery:
#        server-addr: 127.0.0.1:8848
#      config:
#        server-addr: 127.0.0.1:8848
#        file-extension: yaml
#        # 全部服务提供模块固定不变的配置，比如mybatis plus配置，三方登录配置，
#        extension-configs[0]:
#          data-id: common-service-fixed.yaml
#          refresh: true
#        extension-configs[1]:
#          data-id: common.yaml
#          refresh: true

#配置中心的地址
spring:
  profiles:
    active: dev
  main:
    allow-bean-definition-overriding: true
  application:
    name: payment-service
  cloud:
    config:
      #uri: http://127.0.0.1:2020 #zuul要从配置中心拉取文件
      discovery:
        enabled: true #开启springcloudconfig服务端的服务发现
        service-id: base-config-server #config-server服务的名称
      #你要拉取具体的哪个配置文件
      name: payment-service,common,common-service,common-web  #配置文件名字   dev是环境
      profile: ${spring.profiles.active} #环境  组成完整的文件名：gateway-service-dev.yml
      label: master #主分支
#服务发现
#eureka:
#  client:
#    serviceUrl:
#      defaultZone: http://192.168.12.49:36366/eureka/ #注册中心地址
#  instance:
#    prefer-ip-address: true #使用ip地址注册
#    instance-id: payment-service:9952  #指定服务的id
#服务调用
dubbo:
  registry:
    address: spring-cloud://127.0.0.1
    use-as-metadata-center: false
  protocol:
    name: dubbo
    port: -1
    threadname: payment-service
    dispatcher: message
    threads: 50
  application:
    name: ${spring.application.name}
  cloud:
    subscribed-services: proprietor-service,property-service,lease-service
  consumer:
    retries: 0
    timeout: 99999
  provider:
    retries: 0
    timeout: 99999


---
spring:
  profiles: dev

eureka:
  client:
    service-url:
      defaultZone: http://192.168.12.49:36366/eureka
  instance:
    hostname: ${spring.cloud.client.ip-address}
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${spring.application.instance_id:${server.port}}

---
spring:
  profiles: test
eureka:
  client:
    service-url:
      defaultZone: http://222.178.212.29:36366/eureka
  instance:
    hostname: ${spring.cloud.client.ip-address}
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${spring.application.instance_id:${server.port}}

---
spring:
  profiles: prod
eureka:
  client:
    service-url:
      defaultZone: ${server.eureka-service-address}
  instance:
    hostname: ${spring.cloud.client.ip-address}
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${spring.application.instance_id:${server.port}}